<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picBoxSignUp.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>